# loveny_project/settings.py

"""
Django settings for loveny_project project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path

# --- ADD THESE LINES TO LOAD ENVIRONMENT VARIABLES FROM .env FILE ---
import dotenv
dotenv.load_dotenv() # This loads variables from the .env file into os.environ
# --- END ADDITION ---


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# IMPORTANT: Load SECRET_KEY from environment variable for production!
# The second argument is a fallback for development. NEVER use your actual production key here.
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'your-super-secret-key-replace-this-in-production-!!!!-and-make-it-long-and-random')

# SECURITY WARNING: don't run with debug turned on in production!
# For local development, you might set DEBUG = os.environ.get('DJANGO_DEBUG', 'True') == 'True'
DEBUG = False # Set to False for production (important for PythonAnywhere)

# Add your PythonAnywhere domain here
ALLOWED_HOSTS = ['loveny.pythonanywhere.com', '.pythonanywhere.com']


# Application definition

INSTALLED_APPS = [
    # Removed 'daphne', 'channels', 'channels_redis' as in-app chat is removed
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts', 
    'tailwind_filters', # <-- Ensure this line is present
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'loveny_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')], # Add a global templates directory for base.html etc.
        'APP_DIRS': True, # This allows Django to find templates in app_name/templates/app_name/
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'loveny_project.wsgi.application'

# Removed: Django Channels ASGI Application
# ASGI_APPLICATION = 'loveny_project.asgi.application'

# Removed: Channels Layer configuration
# CHANNEL_LAYERS = { ... }


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Lagos' # Set timezone to Lagos, Nigeria for relevance

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
# The directory where `collectstatic` will gather all static files for deployment
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# Directories where Django will look for additional static files (e.g., global static folder)
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]


# Media files (user-uploaded content like profile pictures)
MEDIA_URL = '/media/'
# The directory where user-uploaded media files will be stored
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom user model - IMPORTANT!
# Tells Django to use your custom UserProfile model for authentication.
AUTH_USER_MODEL = 'accounts.UserProfile'

# Redirect URLs after login/logout
LOGIN_REDIRECT_URL = 'profile_edit' # Redirect to user's profile edit page after successful login
LOGOUT_REDIRECT_URL = 'login' # Redirect to login page after logout


# Paystack API Keys (Replace with your actual keys!)
# IMPORTANT: In production, store these securely (e.g., environment variables)
PAYSTACK_PUBLIC_KEY = os.environ.get('PAYSTACK_PUBLIC_KEY', 'pk_test_your_paystack_public_key') # <--- LOAD FROM ENV
PAYSTACK_SECRET_KEY = os.environ.get('PAYSTACK_SECRET_KEY', 'sk_test_your_paystack_secret_key') # <--- LOAD FROM ENV
